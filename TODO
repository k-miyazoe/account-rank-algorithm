Todo():
    ✔ スパマーが一般アカウントからいくら没収されているかの結果を追加出力する @done(23-12-08 14:59)
    ✔ 小数点以下2桁までと設定する(msc) @now @done(23-12-19 09:09)
    ☐ ページランクのランクスコアを出力するテストを行う 10,100 @high
    ☐ cのランクスコアがなぜか高い
    ☐ スコアが高い順に表示する
    ☐ なぞに10回のシミュレーションの平均を取れていない
    ☐ ランクスコアがすべて10のままになっている @high
    ☐ normalの没収金額総和が多すぎる気がする @high
    ☐ 仮想通貨の価値を考慮した閾値の上げかたを考える @low
    ☐ メーリングリストの結果を追加で出力する @low
    
#account_rank_graph,self.agents_graphは有向グラフではない
is_digraph = nx.is_directed(self.agents_graph.graph)
print(f"有向グラフですか？ {is_digraph}")

#print("debug:self.agents_graph",self.agents_graph.graph.edges)
# account_rank = self.calculate_account_rank(
        #     account_rank_graph, set_score_agents)
        
        #account_rank_graph = self.apply_account_rank(account_rank)
        #self.write_account_rank(account_rank, account_rank_csv)
        #print("debug account_rank", account_rank)
set_score_agents = self.agents_graph.set_agents_unified_score(
            self.num_agents)
Done():
    ✔ このシミュレーションを10回繰り返して、平均値を出力する @high @done(23-12-07 10:04)
    ✔ 失敗させる方法．ページランがないと失敗する境を調査する @low @done(23-12-06 09:03)
    ✔ 1つのcsvファイルに全ての結果をまとめる @high @done(23-12-03 18:12)
    ✔ 初期msc,手数料の設定,試行回数によって大きく結果が変わるので、相談する(初期mscは変更予定) @now @done(23-12-06 09:03)
    ✔ apply_account_rankが複数回呼び出しが必要か検討する @low グラフを引き継ぐ時エッジが消えるから意味なさそう @done(23-12-03 13:57)
    ✔ email_count,len(agent_nodes)がともに0になる不具合の原因調査 @high エージェントの数を1000にしたら、動いた??? @done(23-12-03 13:49)
    ✔ メールの送信数はユーザーが増えたとしてもかわなないから、送信数を固定すること @high @now @done(23-12-03 13:57)
    ✔ graphの生成処理は一旦停止する @done(23-12-03 13:58)

    返金確率が1,1,1のときなぜcが0になるか調査する
    矢印はメールの送受信ではなく、仮想通貨の送金・着金を意味する
    あるエージェントからあるエージェントへのメール回数は一回のみとする．
    エッジの幅を0.1にしたら、かっこいいグラフが出力された
    最初に所持するmscの量によって、結果が変化する

    


    